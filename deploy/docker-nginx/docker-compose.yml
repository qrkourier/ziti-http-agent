version: "3.3"
services:
  nginx:
    build: ./nginx
    image: nginx-browzer
    ports:
      - "443:443"
    volumes:
      - ./nginx-log:/var/log/nginx
  flame-agent:
    image: ghcr.io/openziti/ziti-http-agent:pr155.360
    restart: always
    volumes:
      - ./ziti-http-agent:/ziti
    ports: []
      #- "443:443"
    entrypoint: []
    command:
      - node
      - index.js
    environment:
      NODE_ENV: production
      ZITI_NODEJS_LOG: 99
      ZITI_LOG: 99
      ZITI_AGENT_LOGLEVEL: debug
      # the ZBR log level may impact user agent performance
      ZITI_BROWZER_RUNTIME_LOGLEVEL: silent
      # the user agent must be able to verify this server's certificate, and
      # this value must not be identical to ZITI_AGENT_HOST
      ZITI_CONTROLLER_HOST: ${ZITI_CONTROLLER_HOST}
      ZITI_CONTROLLER_PORT: ${ZITI_CONTROLLER_PORT}
      # this value must not be identical to ZITI_CONTROLLER_HOST
      ZITI_AGENT_HOST: door.bingnet.cloud
      ZITI_AGENT_CERTIFICATE_PATH: /ziti/fullchain.pem
      ZITI_AGENT_KEY_PATH: /ziti/privkey.pem
      # the port on which this agent will listen inside the container must
      # match the port on which the external server or load balancer is
      # listening
      ZITI_AGENT_HTTPS_PORT: 443
      # wildcard: must match ZITI_AGENT_HOST?
      # service: Ziti service name
      # port: Ziti service port
      # path: Ziti service HTTP route
      ZITI_AGENT_TARGETS: >
          {
            "targetArray": [{
              "wildcard": "door.bingnet.cloud",
              "service": "flame",
              "port": 80,
              "path": "/"
            }]
          }
      ZITI_AGENT_TARGET_SCHEME: http
      ZITI_AGENT_TARGET_SERVICE: flame
      ZITI_AGENT_TARGET_PORT: 80
      IDP_ISSUER_BASE_URL: ${IDP_ISSUER_BASE_URL}
      IDP_CLIENT_ID: ${IDP_CLIENT_ID}
      IDP_CLAIMS_PROPERTY: email
      IDP_TOKEN_DURATION: 28800
  jellyfin-agent:
    image: ghcr.io/openziti/ziti-http-agent:pr155.360
    restart: always
    volumes:
      - ./ziti-http-agent:/ziti
    ports: []
      #- "443:443"
    entrypoint: []
    command:
      - node
      - index.js
    environment:
      NODE_ENV: production
      ZITI_NODEJS_LOG: 99
      ZITI_LOG: 99
      ZITI_AGENT_LOGLEVEL: debug
      # the ZBR log level may impact user agent performance
      ZITI_BROWZER_RUNTIME_LOGLEVEL: silent
      # the user agent must be able to verify this server's certificate, and
      # this value must not be identical to ZITI_AGENT_HOST
      ZITI_CONTROLLER_HOST: ${ZITI_CONTROLLER_HOST}
      ZITI_CONTROLLER_PORT: ${ZITI_CONTROLLER_PORT}
      # this value must not be identical to ZITI_CONTROLLER_HOST
      ZITI_AGENT_HOST: media.bingnet.cloud
      ZITI_AGENT_CERTIFICATE_PATH: /ziti/fullchain.pem
      ZITI_AGENT_KEY_PATH: /ziti/privkey.pem
      # the port on which this agent will listen inside the container must
      # match the port on which the external server or load balancer is
      # listening
      ZITI_AGENT_HTTPS_PORT: 443
      # wildcard: must match ZITI_AGENT_HOST?
      # service: Ziti service name
      # port: Ziti service port
      # path: Ziti service HTTP route
      ZITI_AGENT_TARGETS: >
          {
            "targetArray": [{
              "wildcard": "media.bingnet.cloud",
              "service": "jellyfin",
              "port": 80,
              "path": "/"
            }]
          }
      ZITI_AGENT_TARGET_SCHEME: http
      ZITI_AGENT_TARGET_SERVICE: jellyfin
      ZITI_AGENT_TARGET_PORT: 80
      IDP_ISSUER_BASE_URL: ${IDP_ISSUER_BASE_URL}
      IDP_CLIENT_ID: ${IDP_CLIENT_ID}
      IDP_CLAIMS_PROPERTY: email
      IDP_TOKEN_DURATION: 28800
